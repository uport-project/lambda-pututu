service: lambda-pututu

plugins:
  - serverless-offline
  - serverless-kms-secrets
  - serverless-domain-manager
  - serverless-plugin-aws-alerts

provider:
  name: aws
  runtime: nodejs8.10
  stage: develop
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
      - KMS:Decrypt
      Resource: ${self:custom.kmsSecrets.keyArn}
  environment:
      SECRETS: ${self:custom.kmsSecrets.secrets.SECRETS}

custom:
  serverless-kms-secrets:
    secretsFile: kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml
  kmsSecrets: ${file(kms-secrets.${opt:stage, self:provider.stage}.${opt:region, self:provider.region}.yml)}
  domainName: 
    develop: api.uport.space
    master: api.uport.me
  customDomain:
    domainName: ${self:custom.domainName.${opt:stage, self:provider.stage}}
    basePath: pututu
    createRoute53Record: false
  alerts:
    dashboards: true
    topics:
      alarm: arn:aws:sns:us-west-2:113196216558:cloudwatch-alarm-to-slack
    definitions: 
      functionDuration:
        threshold: 2500 # override avereage duration alert
    alarms:
      - functionThrottles
      - functionErrors
      - functionInvocations
      - functionDuration
      
  
functions:
  sns:
    handler: src/api_handler.sns
    events:
      - http:
          path: sns
          method: post
          cors: true

  message_get:
    handler: src/api_handler.message_get
    events:
      - http:
          path: message
          method: get
          cors: true
      - http:
          path: message/{id}
          cors: true
          method: get
          request:
            parameters:
              paths:
                id: true
  message_delete:
    handler: src/api_handler.message_delete
    events:
      - http:
          path: message/{id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                id: true

